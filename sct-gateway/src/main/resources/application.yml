#服务名、端口配置
server:
  port: 5000
#  servlet:
#    context-path : /sct-gateway

#注册中心配置
#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:8000/eureka #注册地址

#日志
logging:
  level:
    root: info
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  profiles:
    active: sit #运行环境
  application:
    name: sct-gateway
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      httpclient: #gateway全局超时设置
        connect-timeout: 10000 #默认为毫秒单位 connect-timeout 默认为45s
        response-timeout: 10s #点进源码可设置不同单位，我这里设置为5s
      discovery:
#        locator:
          # enabled: xxx 开启根据微服务名称自动转发,与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。
          #默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能(微服务应用名默认大写访问)。
          #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
#          enabled: true
#          lower-case-service-id: true  #微服务名称以小写形式呈现
      routes:
        - id: sct-sys #路由的ID
          uri: lb://sct-sys #匹配路由的转发地址对应服务名：lb://{spring.application.name}
          predicates: #配置该路由的断言，通过PredicateDefinition类进行接收配置。
            - Path=/sct-sys/**
#          filters: # 去掉部分URL路径
#            - StripPrefix=1
#          metadata: #针对于当前路由的http超时时间设置，（如果同时设置全局超时时间，以自己路由超时时间设置的为准）
#            response-timeout: : 2000 #响应超时
#            connect-timeout: 2000 #连接超时
        - id: sct-auth
          uri: lb://sct-auth
          predicates:
            - Path=/sct-auth/**
        - id: sct-product
          uri: lb://sct-product
          predicates:
            - Path=/sct-product/**
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: "http://localhost:5001/sct-auth/rsa/publicKey"
  redis:
    host: ${sct.redis.host}
    port: ${sct.redis.port}
    password: ${sct.redis.password}
    database: 0  #操作第几个库
    jedis:
      pool:
        max-active: 10 #最大连接数
        max-wait: 6000ms #等待时间
        max-idle: 8 #最大空闲数
        min-idle: 3 #初始化最小数

#配置不用鉴权的白名单
security:
  permited:
    urls:
      - "/sct-auth/oauth/token"
      - "/sct-auth/rsa/publicKey"
      - "/sct-sys/user/login"
      - "/sct-auth/oauth/demo"
      - "/sct-product/product/demo"
      - "/sct-sys/demo/lb"
      - "/sct-sys/demo/plb"
