#应用端口
server.port=8001
server.servlet.context-path=/sys

#应用名称
spring.application.name=sct-sys

#eureka配置
eureka.client.serviceUrl.defaultZone=http://localhost:8000/eureka

# =============================================== 数据库属性配置===========================================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://:3306/scart_sys_sit?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Hongkong&usessl=true&useOldAliasMetadataBehavior=true
spring.datasource.username=
spring.datasource.password=
#指定连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# =============================================== mybatis 相关属性配置 ===========================================
# mapper.xml文件的路径，多个配置可以使用英文逗号隔开
mybatis.mapper-locations=classpath*:mapper/**/*Mapper.xml
# 类型别名包配置，只能指定具体的包，多个配置可以使用英文逗号隔开
mybatis.type-aliases-package=com.vg.sct.**.model
# 自动将以下划线方式命名的数据库列映射到Java对象的驼峰命名属性中
mybatis.configuration.map-underscore-to-camel-case=true
#type-handler
#mybatis.type-handlers-package=com.bpg.metadatareader.handler

# =============Druid 相关属性设置，使用druid-spring-boot-starter自动装配，无需编写@configuration配置类====================
# 初始化连接大小[0]
spring.datasource.druid.initial-size=1
# 最小空闲连接数[0]
spring.datasource.druid.min-idle=1
# 最大连接数[8]
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间(毫秒)[-1]
spring.datasource.druid.max-wait=60000
# 查询超时时间(秒)
spring.datasource.druid.query-timeout=90
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 'x'
# 申请连接时检测连接可用性[false]
spring.datasource.druid.test-on-borrow=false
# 归还连接检测[false]
spring.datasource.druid.test-on-return=false
# 超时是否检测连接可用性[true]
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接 (毫秒)
spring.datasource.druid.time-between-eviction-runs-millis=60000
#  配置一个连接在池中最小生存的时间(毫秒，默认30分钟)
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat；日志用的filter:log4j；防御sql注入的filter:wall
spring.datasource.druid.filters=stat,wall,slf4j
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
# 是否缓存PreparedStatement. PSCache对支持游标的数据库性能提升巨大，比如说oracle.在mysql下建议关闭.
spring.datasource.druid.pool-prepared-statements=false
# 每个连接上PSCache的大小
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20